// 1. 二进制的最高位是符号位 0表示正数 1表示负数
// 2. 正数的原码 反码 补码是一样的 三码合一 
// 3. 负数的反码为原码的符号位不变 其他按位取反
// 4. 负数的补码 = 反码 + 1 负数的反码 = 补码 - 1
// 5. 0的反码反码 补码都是0
// 6. java中没有无符号数 换言之 java中的数都是有符号的
// 7. 计算机都是以补码进行运算的
// 8. 运算结果要看它的原码
public class BitOperator {
    public static void main(String[] args) {

        // 2的补码：    00000000 00000000 00000000 00000010
        // 3的补码：    00000000 00000000 00000000 00000011
        // 2｜3补码:    00000000 00000000 00000000 00000011
        // 2｜3原码:    00000000 00000000 00000000 00000011
        // 结果为3
        System.out.println(2|3);

        // 2的补码：    00000000 00000000 00000000 00000010
        // 3的补码：    00000000 00000000 00000000 00000011
        // 2^3补码:    00000000 00000000 00000000 00000001
        // 2｜3原码:    00000000 00000000 00000000 00000001
        // 结果为1
        System.out.println(2^3);
    }
}